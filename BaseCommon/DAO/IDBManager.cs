using Base.DataContractCore.Base;
using System.Collections.Generic;
using System.Data;
using System.Text;
using System.Threading.Tasks;

namespace Base.Common.DAO
{
    public interface IDBManager<TDBActionType>
    {
        /// <summary>
        /// Execute store procedure and return dataset
        /// </summary>
        /// <returns></returns>
        Task<DataSet> GetDataSetAsync(string spName, List<CustomParameter> paramData);


        /// <summary>
        /// Update datatable, insert/delete/update command is generated by dataadapter
        /// RowState is condition to generate insert/delete/update
        /// </summary>
        /// <param name="tbName"></param>
        /// <param name="tbData"></param>
        /// <returns></returns>
        bool UpdateTable(string tbName, DataTable tbData);

        /// <summary>
        /// Update datatable with checking key column
        /// </summary>
        /// <param name="objTable"></param>
        /// <param name="tbData"></param>
        /// <returns></returns>
        Task<int> UpdateTable(TableObject objTable, DataTable tbData);

        /// <summary>
        /// Update datatable and return updated table 
        /// </summary>
        /// <param name="objTable"></param>
        /// <param name="tbData"></param>
        /// <returns></returns>
        Task<DataTable> UpdateTableReturnData(TableObject objTable, DataTable tbData);
    }
}
